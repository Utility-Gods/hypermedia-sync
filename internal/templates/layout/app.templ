package layout

templ Head(title string) {
	<meta charset="UTF-8"/>
	<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
	<title>{ title }</title>
	
	<!-- SEO Meta Tags -->
	<meta name="description" content="Explore real-time hypermedia synchronization with HTMX and Server-Sent Events. Interactive experiments demonstrating reactive UI patterns, live updates, and modern web architecture without JavaScript frameworks."/>
	<meta name="keywords" content="HTMX, hypermedia, SSE, server-sent events, real-time, reactive UI, Go, Golang, web development, interactive experiments, live updates, hx-swap, hypermedia-driven applications"/>
	<meta name="author" content="UtilityGods"/>
	<meta name="robots" content="index, follow"/>
	<link rel="canonical" href="https://hypermedia.utilitygods.com"/>
	
	<!-- Open Graph / Facebook -->
	<meta property="og:type" content="website"/>
	<meta property="og:url" content="https://hypermedia.utilitygods.com"/>
	<meta property="og:title" content="Hypermedia Sync Experiments - Real-Time HTMX + SSE Demos"/>
	<meta property="og:description" content="Interactive demonstrations of hypermedia-driven real-time synchronization using HTMX and Server-Sent Events. Experience reactive UIs without complex JavaScript frameworks."/>
	<meta property="og:image" content="https://hypermedia.utilitygods.com/static/img/og-image.svg"/>
	<meta property="og:image:width" content="1200"/>
	<meta property="og:image:height" content="630"/>
	<meta property="og:site_name" content="Hypermedia Sync Experiments"/>
	
	<!-- Twitter -->
	<meta property="twitter:card" content="summary_large_image"/>
	<meta property="twitter:url" content="https://hypermedia.utilitygods.com"/>
	<meta property="twitter:title" content="Hypermedia Sync Experiments - Real-Time HTMX + SSE"/>
	<meta property="twitter:description" content="Interactive demonstrations of hypermedia-driven real-time synchronization using HTMX and Server-Sent Events. Experience reactive UIs without complex JavaScript frameworks."/>
	<meta property="twitter:image" content="https://hypermedia.utilitygods.com/static/img/og-image.svg"/>
	<meta property="twitter:creator" content="@UtilityGods"/>
	
	<!-- Favicon -->
	<link rel="icon" type="image/svg+xml" href="/static/img/favicon.svg"/>
	<meta name="theme-color" content="#f54a00"/>
	
	<!-- JSON-LD Structured Data -->
	<script type="application/ld+json">
	{
		"@context": "https://schema.org",
		"@type": "WebApplication",
		"name": "Hypermedia Sync Experiments",
		"url": "https://hypermedia.utilitygods.com",
		"description": "Interactive demonstrations of hypermedia-driven real-time synchronization using HTMX and Server-Sent Events",
		"applicationCategory": "DeveloperApplication",
		"operatingSystem": "All",
		"browserRequirements": "Requires JavaScript and HTML5 SSE support",
		"creator": {
			"@type": "Organization",
			"name": "UtilityGods",
			"url": "https://utilitygods.com"
		},
		"keywords": ["HTMX", "hypermedia", "SSE", "real-time", "reactive UI", "Go", "web development"],
		"programmingLanguage": ["Go", "JavaScript", "HTML"],
		"screenshot": "https://hypermedia.utilitygods.com/static/img/og-image.svg"
	}
	</script>
	
	<!-- Preload and Scripts -->
	<link rel="preconnect" href="https://fonts.googleapis.com"/>
	<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin/>
	<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet"/>
	<script src="/static/js/htmx.js"></script>
	<script src="/static/js/sse.js"></script>
	<link rel="stylesheet" href="/static/dist/styles.css"/>
}

templ App(title string) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			@Head(title)
		</head>
		<body hx-boost="true" hx-target="#main-content" class="min-h-screen flex flex-col">
			@Header(0)
			<div id="main-content" class="flex-1">
				{ children... }
			</div>
			<footer class="mt-auto border-t border-secondary-700 bg-secondary-900/50 backdrop-blur-sm">
				<div class="max-w-6xl mx-auto px-8 py-6 text-center">
					<p class="text-secondary-300 text-sm">
						Built with HTMX + Golang • Made by 
						<a href="https://utilitygods.com" target="_blank" class="text-primary-600 hover:text-primary-500 font-medium transition-colors">UtilityGods</a>
					</p>
				</div>
			</footer>
		</body>
	</html>
}

templ AppWithSSE(title string, onlineCount int, originatorID string) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			@Head(title)
		</head>
		<body class="min-h-screen flex flex-col">
			<div hx-ext="sse" sse-connect={ "/events?originator=" + originatorID } class="flex-1 flex flex-col">
				@Header(onlineCount)
				<div class="flex-1">
					{ children... }
				</div>
			</div>
			<footer class="mt-auto border-t border-secondary-700 bg-secondary-900/50 backdrop-blur-sm">
				<div class="max-w-6xl mx-auto px-8 py-6 text-center">
					<p class="text-secondary-300 text-sm">
						Built with HTMX + Golang • Made by 
						<a href="https://utilitygods.com" target="_blank" class="text-primary-600 hover:text-primary-500 font-medium transition-colors">UtilityGods</a>
					</p>
				</div>
			</footer>
		</body>
	</html>
}


templ Breadcrumb(items []BreadcrumbItem) {
	<nav class="flex items-center gap-1 text-sm bg-secondary-800/30 rounded-lg px-4 py-2 border border-secondary-700/50">
		for i, item := range items {
			if i > 0 {
				<span class="text-secondary-500 mx-2">/</span>
			}
			if item.URL != "" {
				<a href={ templ.SafeURL(item.URL) } class="text-primary-600 hover:text-primary-500 hover:underline transition-all duration-200 px-2 py-1 rounded">{ item.Label }</a>
			} else {
				<span class="text-secondary-200 font-medium px-2 py-1">{ item.Label }</span>
			}
		}
	</nav>
}

type BreadcrumbItem struct {
	Label string
	URL   string
}